// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: proto/property/property.proto

package property

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	sdk "property-service/proto/sdk"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MsgId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MsgId) Reset() {
	*x = MsgId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgId) ProtoMessage() {}

func (x *MsgId) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgId.ProtoReflect.Descriptor instead.
func (*MsgId) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{0}
}

func (x *MsgId) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type MsgGetBooking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId string `protobuf:"bytes,1,opt,name=propertyId,proto3" json:"propertyId,omitempty"`
}

func (x *MsgGetBooking) Reset() {
	*x = MsgGetBooking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetBooking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetBooking) ProtoMessage() {}

func (x *MsgGetBooking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetBooking.ProtoReflect.Descriptor instead.
func (*MsgGetBooking) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{1}
}

func (x *MsgGetBooking) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type MsgProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string       `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	HostId         string        `protobuf:"bytes,2,opt,name=hostId,proto3" json:"hostId,omitempty"`
	PropertyType   string        `protobuf:"bytes,3,opt,name=propertyType,proto3" json:"propertyType,omitempty"`
	PropertyStatus string        `protobuf:"bytes,40,opt,name=propertyStatus,proto3" json:"propertyStatus,omitempty"`
	OverallRate    float32       `protobuf:"fixed32,4,opt,name=overallRate,proto3" json:"overallRate,omitempty"`
	MaxGuests      int32         `protobuf:"varint,5,opt,name=maxGuests,proto3" json:"maxGuests,omitempty"`
	MaxPets        int32         `protobuf:"varint,24,opt,name=maxPets,proto3" json:"maxPets,omitempty"`
	NumBeds        int32         `protobuf:"varint,6,opt,name=numBeds,proto3" json:"numBeds,omitempty"`
	NumBedrooms    int32         `protobuf:"varint,7,opt,name=numBedrooms,proto3" json:"numBedrooms,omitempty"`
	NumBathrooms   int32         `protobuf:"varint,8,opt,name=numBathrooms,proto3" json:"numBathrooms,omitempty"`
	IsGuestFavor   *bool         `protobuf:"varint,10,opt,name=isGuestFavor,proto3,oneof" json:"isGuestFavor,omitempty"`
	IsAllowPet     *bool         `protobuf:"varint,11,opt,name=isAllowPet,proto3,oneof" json:"isAllowPet,omitempty"`
	IsSelfCheckIn  *bool         `protobuf:"varint,12,opt,name=isSelfCheckIn,proto3,oneof" json:"isSelfCheckIn,omitempty"`
	IsInstantBook  *bool         `protobuf:"varint,13,opt,name=isInstantBook,proto3,oneof" json:"isInstantBook,omitempty"`
	Title          string        `protobuf:"bytes,14,opt,name=title,proto3" json:"title,omitempty"`
	Body           string        `protobuf:"bytes,15,opt,name=body,proto3" json:"body,omitempty"`
	Address        *string       `protobuf:"bytes,41,opt,name=address,proto3,oneof" json:"address,omitempty"`
	CityCode       *string       `protobuf:"bytes,16,opt,name=cityCode,proto3,oneof" json:"cityCode,omitempty"`
	NationCode     *string       `protobuf:"bytes,17,opt,name=nationCode,proto3,oneof" json:"nationCode,omitempty"`
	Lat            *string       `protobuf:"bytes,18,opt,name=lat,proto3,oneof" json:"lat,omitempty"`
	Long           *string       `protobuf:"bytes,19,opt,name=long,proto3,oneof" json:"long,omitempty"`
	NightPrice     float64       `protobuf:"fixed64,20,opt,name=nightPrice,proto3" json:"nightPrice,omitempty"`
	ServiceFee     float64       `protobuf:"fixed64,21,opt,name=serviceFee,proto3" json:"serviceFee,omitempty"`
	TaxPercent     float64       `protobuf:"fixed64,22,opt,name=taxPercent,proto3" json:"taxPercent,omitempty"`
	Status         *string       `protobuf:"bytes,23,opt,name=status,proto3,oneof" json:"status,omitempty"`
	Amenities      []*MsgAmenity `protobuf:"bytes,25,rep,name=amenities,proto3" json:"amenities,omitempty"`
	IntroCover     *string       `protobuf:"bytes,26,opt,name=introCover,proto3,oneof" json:"introCover,omitempty"`
	IntroImages    []string      `protobuf:"bytes,27,rep,name=introImages,proto3" json:"introImages,omitempty"`
}

func (x *MsgProperty) Reset() {
	*x = MsgProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgProperty) ProtoMessage() {}

func (x *MsgProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgProperty.ProtoReflect.Descriptor instead.
func (*MsgProperty) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{2}
}

func (x *MsgProperty) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *MsgProperty) GetHostId() string {
	if x != nil {
		return x.HostId
	}
	return ""
}

func (x *MsgProperty) GetPropertyType() string {
	if x != nil {
		return x.PropertyType
	}
	return ""
}

func (x *MsgProperty) GetPropertyStatus() string {
	if x != nil {
		return x.PropertyStatus
	}
	return ""
}

func (x *MsgProperty) GetOverallRate() float32 {
	if x != nil {
		return x.OverallRate
	}
	return 0
}

func (x *MsgProperty) GetMaxGuests() int32 {
	if x != nil {
		return x.MaxGuests
	}
	return 0
}

func (x *MsgProperty) GetMaxPets() int32 {
	if x != nil {
		return x.MaxPets
	}
	return 0
}

func (x *MsgProperty) GetNumBeds() int32 {
	if x != nil {
		return x.NumBeds
	}
	return 0
}

func (x *MsgProperty) GetNumBedrooms() int32 {
	if x != nil {
		return x.NumBedrooms
	}
	return 0
}

func (x *MsgProperty) GetNumBathrooms() int32 {
	if x != nil {
		return x.NumBathrooms
	}
	return 0
}

func (x *MsgProperty) GetIsGuestFavor() bool {
	if x != nil && x.IsGuestFavor != nil {
		return *x.IsGuestFavor
	}
	return false
}

func (x *MsgProperty) GetIsAllowPet() bool {
	if x != nil && x.IsAllowPet != nil {
		return *x.IsAllowPet
	}
	return false
}

func (x *MsgProperty) GetIsSelfCheckIn() bool {
	if x != nil && x.IsSelfCheckIn != nil {
		return *x.IsSelfCheckIn
	}
	return false
}

func (x *MsgProperty) GetIsInstantBook() bool {
	if x != nil && x.IsInstantBook != nil {
		return *x.IsInstantBook
	}
	return false
}

func (x *MsgProperty) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *MsgProperty) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *MsgProperty) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *MsgProperty) GetCityCode() string {
	if x != nil && x.CityCode != nil {
		return *x.CityCode
	}
	return ""
}

func (x *MsgProperty) GetNationCode() string {
	if x != nil && x.NationCode != nil {
		return *x.NationCode
	}
	return ""
}

func (x *MsgProperty) GetLat() string {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return ""
}

func (x *MsgProperty) GetLong() string {
	if x != nil && x.Long != nil {
		return *x.Long
	}
	return ""
}

func (x *MsgProperty) GetNightPrice() float64 {
	if x != nil {
		return x.NightPrice
	}
	return 0
}

func (x *MsgProperty) GetServiceFee() float64 {
	if x != nil {
		return x.ServiceFee
	}
	return 0
}

func (x *MsgProperty) GetTaxPercent() float64 {
	if x != nil {
		return x.TaxPercent
	}
	return 0
}

func (x *MsgProperty) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *MsgProperty) GetAmenities() []*MsgAmenity {
	if x != nil {
		return x.Amenities
	}
	return nil
}

func (x *MsgProperty) GetIntroCover() string {
	if x != nil && x.IntroCover != nil {
		return *x.IntroCover
	}
	return ""
}

func (x *MsgProperty) GetIntroImages() []string {
	if x != nil {
		return x.IntroImages
	}
	return nil
}

type MsgDeleteProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId string `protobuf:"bytes,1,opt,name=propertyId,proto3" json:"propertyId,omitempty"`
}

func (x *MsgDeleteProperty) Reset() {
	*x = MsgDeleteProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteProperty) ProtoMessage() {}

func (x *MsgDeleteProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteProperty.ProtoReflect.Descriptor instead.
func (*MsgDeleteProperty) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{3}
}

func (x *MsgDeleteProperty) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type MsgGetProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId string `protobuf:"bytes,1,opt,name=propertyId,proto3" json:"propertyId,omitempty"`
}

func (x *MsgGetProperty) Reset() {
	*x = MsgGetProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgGetProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgGetProperty) ProtoMessage() {}

func (x *MsgGetProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgGetProperty.ProtoReflect.Descriptor instead.
func (*MsgGetProperty) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{4}
}

func (x *MsgGetProperty) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type MsgQueryProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate    *sdk.Pagination `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	TimeQuery   *sdk.TimeQuery  `protobuf:"bytes,2,opt,name=timeQuery,proto3,oneof" json:"timeQuery,omitempty"`
	QueryFields *MsgProperty    `protobuf:"bytes,3,opt,name=queryFields,proto3,oneof" json:"queryFields,omitempty"`
	OrderFields *OrderProperty  `protobuf:"bytes,4,opt,name=orderFields,proto3,oneof" json:"orderFields,omitempty"`
}

func (x *MsgQueryProperty) Reset() {
	*x = MsgQueryProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryProperty) ProtoMessage() {}

func (x *MsgQueryProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryProperty.ProtoReflect.Descriptor instead.
func (*MsgQueryProperty) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{5}
}

func (x *MsgQueryProperty) GetPaginate() *sdk.Pagination {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *MsgQueryProperty) GetTimeQuery() *sdk.TimeQuery {
	if x != nil {
		return x.TimeQuery
	}
	return nil
}

func (x *MsgQueryProperty) GetQueryFields() *MsgProperty {
	if x != nil {
		return x.QueryFields
	}
	return nil
}

func (x *MsgQueryProperty) GetOrderFields() *OrderProperty {
	if x != nil {
		return x.OrderFields
	}
	return nil
}

type QueryProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId string  `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Id     *string `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	Name   *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
}

func (x *QueryProperty) Reset() {
	*x = QueryProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryProperty) ProtoMessage() {}

func (x *QueryProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryProperty.ProtoReflect.Descriptor instead.
func (*QueryProperty) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{6}
}

func (x *QueryProperty) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *QueryProperty) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *QueryProperty) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type OrderProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *sdk.Sort `protobuf:"varint,1,opt,name=createdAt,proto3,enum=sdk.Sort,oneof" json:"createdAt,omitempty"`
}

func (x *OrderProperty) Reset() {
	*x = OrderProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProperty) ProtoMessage() {}

func (x *OrderProperty) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProperty.ProtoReflect.Descriptor instead.
func (*OrderProperty) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{7}
}

func (x *OrderProperty) GetCreatedAt() sdk.Sort {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return sdk.Sort(0)
}

// review
type MsgCreateReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     string  `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PropertyId *string `protobuf:"bytes,2,opt,name=propertyId,proto3,oneof" json:"propertyId,omitempty"`
	ParentId   string  `protobuf:"bytes,3,opt,name=parentId,proto3" json:"parentId,omitempty"`
	Rating     float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment    string  `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	ImageUrl   string  `protobuf:"bytes,6,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
}

func (x *MsgCreateReview) Reset() {
	*x = MsgCreateReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgCreateReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgCreateReview) ProtoMessage() {}

func (x *MsgCreateReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgCreateReview.ProtoReflect.Descriptor instead.
func (*MsgCreateReview) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{8}
}

func (x *MsgCreateReview) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MsgCreateReview) GetPropertyId() string {
	if x != nil && x.PropertyId != nil {
		return *x.PropertyId
	}
	return ""
}

func (x *MsgCreateReview) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *MsgCreateReview) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *MsgCreateReview) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MsgCreateReview) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type MsgUpdateReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewId string  `protobuf:"bytes,1,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
	Rating   float32 `protobuf:"fixed32,4,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment  string  `protobuf:"bytes,5,opt,name=comment,proto3" json:"comment,omitempty"`
	ImageUrl string  `protobuf:"bytes,6,opt,name=imageUrl,proto3" json:"imageUrl,omitempty"`
}

func (x *MsgUpdateReview) Reset() {
	*x = MsgUpdateReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgUpdateReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgUpdateReview) ProtoMessage() {}

func (x *MsgUpdateReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgUpdateReview.ProtoReflect.Descriptor instead.
func (*MsgUpdateReview) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{9}
}

func (x *MsgUpdateReview) GetReviewId() string {
	if x != nil {
		return x.ReviewId
	}
	return ""
}

func (x *MsgUpdateReview) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *MsgUpdateReview) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *MsgUpdateReview) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type MsgDeleteReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReviewId string `protobuf:"bytes,1,opt,name=reviewId,proto3" json:"reviewId,omitempty"`
}

func (x *MsgDeleteReview) Reset() {
	*x = MsgDeleteReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgDeleteReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgDeleteReview) ProtoMessage() {}

func (x *MsgDeleteReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgDeleteReview.ProtoReflect.Descriptor instead.
func (*MsgDeleteReview) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{10}
}

func (x *MsgDeleteReview) GetReviewId() string {
	if x != nil {
		return x.ReviewId
	}
	return ""
}

type MsgQueryReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate    *sdk.Pagination `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	TimeQuery   *sdk.TimeQuery  `protobuf:"bytes,2,opt,name=timeQuery,proto3,oneof" json:"timeQuery,omitempty"`
	QueryFields *QueryReview    `protobuf:"bytes,3,opt,name=queryFields,proto3,oneof" json:"queryFields,omitempty"`
	OrderFields *OrderReview    `protobuf:"bytes,4,opt,name=orderFields,proto3,oneof" json:"orderFields,omitempty"`
}

func (x *MsgQueryReview) Reset() {
	*x = MsgQueryReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryReview) ProtoMessage() {}

func (x *MsgQueryReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryReview.ProtoReflect.Descriptor instead.
func (*MsgQueryReview) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{11}
}

func (x *MsgQueryReview) GetPaginate() *sdk.Pagination {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *MsgQueryReview) GetTimeQuery() *sdk.TimeQuery {
	if x != nil {
		return x.TimeQuery
	}
	return nil
}

func (x *MsgQueryReview) GetQueryFields() *QueryReview {
	if x != nil {
		return x.QueryFields
	}
	return nil
}

func (x *MsgQueryReview) GetOrderFields() *OrderReview {
	if x != nil {
		return x.OrderFields
	}
	return nil
}

type QueryReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PropertyId *string `protobuf:"bytes,1,opt,name=propertyId,proto3,oneof" json:"propertyId,omitempty"`
	Rate       *int32  `protobuf:"varint,2,opt,name=rate,proto3,oneof" json:"rate,omitempty"`
	Id         *string `protobuf:"bytes,3,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *QueryReview) Reset() {
	*x = QueryReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReview) ProtoMessage() {}

func (x *QueryReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReview.ProtoReflect.Descriptor instead.
func (*QueryReview) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{12}
}

func (x *QueryReview) GetPropertyId() string {
	if x != nil && x.PropertyId != nil {
		return *x.PropertyId
	}
	return ""
}

func (x *QueryReview) GetRate() int32 {
	if x != nil && x.Rate != nil {
		return *x.Rate
	}
	return 0
}

func (x *QueryReview) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type OrderReview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *sdk.Sort `protobuf:"varint,1,opt,name=createdAt,proto3,enum=sdk.Sort,oneof" json:"createdAt,omitempty"`
}

func (x *OrderReview) Reset() {
	*x = OrderReview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderReview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderReview) ProtoMessage() {}

func (x *OrderReview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderReview.ProtoReflect.Descriptor instead.
func (*OrderReview) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{13}
}

func (x *OrderReview) GetCreatedAt() sdk.Sort {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return sdk.Sort(0)
}

// Amenity
type MsgAmenity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Icon        string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *MsgAmenity) Reset() {
	*x = MsgAmenity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgAmenity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgAmenity) ProtoMessage() {}

func (x *MsgAmenity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgAmenity.ProtoReflect.Descriptor instead.
func (*MsgAmenity) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{14}
}

func (x *MsgAmenity) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgAmenity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MsgAmenity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MsgAmenity) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type MsgQueryAmenity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate    *sdk.Pagination `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	TimeQuery   *sdk.TimeQuery  `protobuf:"bytes,2,opt,name=timeQuery,proto3,oneof" json:"timeQuery,omitempty"`
	QueryFields *MsgAmenity     `protobuf:"bytes,3,opt,name=queryFields,proto3,oneof" json:"queryFields,omitempty"`
	OrderFields *OrderAmenity   `protobuf:"bytes,4,opt,name=orderFields,proto3,oneof" json:"orderFields,omitempty"`
}

func (x *MsgQueryAmenity) Reset() {
	*x = MsgQueryAmenity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryAmenity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryAmenity) ProtoMessage() {}

func (x *MsgQueryAmenity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryAmenity.ProtoReflect.Descriptor instead.
func (*MsgQueryAmenity) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{15}
}

func (x *MsgQueryAmenity) GetPaginate() *sdk.Pagination {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *MsgQueryAmenity) GetTimeQuery() *sdk.TimeQuery {
	if x != nil {
		return x.TimeQuery
	}
	return nil
}

func (x *MsgQueryAmenity) GetQueryFields() *MsgAmenity {
	if x != nil {
		return x.QueryFields
	}
	return nil
}

func (x *MsgQueryAmenity) GetOrderFields() *OrderAmenity {
	if x != nil {
		return x.OrderFields
	}
	return nil
}

type OrderAmenity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *sdk.Sort `protobuf:"varint,1,opt,name=createdAt,proto3,enum=sdk.Sort,oneof" json:"createdAt,omitempty"`
}

func (x *OrderAmenity) Reset() {
	*x = OrderAmenity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAmenity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAmenity) ProtoMessage() {}

func (x *OrderAmenity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAmenity.ProtoReflect.Descriptor instead.
func (*OrderAmenity) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{16}
}

func (x *OrderAmenity) GetCreatedAt() sdk.Sort {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return sdk.Sort(0)
}

type MsgBooking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PropertyId          string  `protobuf:"bytes,2,opt,name=propertyId,proto3" json:"propertyId,omitempty"`
	UserId              string  `protobuf:"bytes,3,opt,name=userId,proto3" json:"userId,omitempty"`
	CheckInDate         int64   `protobuf:"varint,4,opt,name=checkInDate,proto3" json:"checkInDate,omitempty"`
	CheckoutDate        int64   `protobuf:"varint,5,opt,name=checkoutDate,proto3" json:"checkoutDate,omitempty"`
	GuestNumber         int32   `protobuf:"varint,6,opt,name=guestNumber,proto3" json:"guestNumber,omitempty"`
	ChildNumber         int32   `protobuf:"varint,7,opt,name=childNumber,proto3" json:"childNumber,omitempty"`
	BabyNumber          int32   `protobuf:"varint,8,opt,name=babyNumber,proto3" json:"babyNumber,omitempty"`
	PetNumber           int32   `protobuf:"varint,9,opt,name=petNumber,proto3" json:"petNumber,omitempty"`
	NightNumber         int32   `protobuf:"varint,10,opt,name=nightNumber,proto3" json:"nightNumber,omitempty"`
	TotalPrice          float64 `protobuf:"fixed64,11,opt,name=totalPrice,proto3" json:"totalPrice,omitempty"`
	TotalPriceBeforeTax float64 `protobuf:"fixed64,12,opt,name=totalPriceBeforeTax,proto3" json:"totalPriceBeforeTax,omitempty"`
	TaxFee              float64 `protobuf:"fixed64,13,opt,name=taxFee,proto3" json:"taxFee,omitempty"`
	Status              *string `protobuf:"bytes,14,opt,name=status,proto3,oneof" json:"status,omitempty"`
}

func (x *MsgBooking) Reset() {
	*x = MsgBooking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgBooking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgBooking) ProtoMessage() {}

func (x *MsgBooking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgBooking.ProtoReflect.Descriptor instead.
func (*MsgBooking) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{17}
}

func (x *MsgBooking) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgBooking) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

func (x *MsgBooking) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MsgBooking) GetCheckInDate() int64 {
	if x != nil {
		return x.CheckInDate
	}
	return 0
}

func (x *MsgBooking) GetCheckoutDate() int64 {
	if x != nil {
		return x.CheckoutDate
	}
	return 0
}

func (x *MsgBooking) GetGuestNumber() int32 {
	if x != nil {
		return x.GuestNumber
	}
	return 0
}

func (x *MsgBooking) GetChildNumber() int32 {
	if x != nil {
		return x.ChildNumber
	}
	return 0
}

func (x *MsgBooking) GetBabyNumber() int32 {
	if x != nil {
		return x.BabyNumber
	}
	return 0
}

func (x *MsgBooking) GetPetNumber() int32 {
	if x != nil {
		return x.PetNumber
	}
	return 0
}

func (x *MsgBooking) GetNightNumber() int32 {
	if x != nil {
		return x.NightNumber
	}
	return 0
}

func (x *MsgBooking) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *MsgBooking) GetTotalPriceBeforeTax() float64 {
	if x != nil {
		return x.TotalPriceBeforeTax
	}
	return 0
}

func (x *MsgBooking) GetTaxFee() float64 {
	if x != nil {
		return x.TaxFee
	}
	return 0
}

func (x *MsgBooking) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

type MsgQueryBooking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate    *sdk.Pagination `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	TimeQuery   *sdk.TimeQuery  `protobuf:"bytes,2,opt,name=timeQuery,proto3,oneof" json:"timeQuery,omitempty"`
	QueryFields *MsgBooking     `protobuf:"bytes,3,opt,name=queryFields,proto3,oneof" json:"queryFields,omitempty"`
	OrderFields *OrderBooking   `protobuf:"bytes,4,opt,name=orderFields,proto3,oneof" json:"orderFields,omitempty"`
}

func (x *MsgQueryBooking) Reset() {
	*x = MsgQueryBooking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryBooking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryBooking) ProtoMessage() {}

func (x *MsgQueryBooking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryBooking.ProtoReflect.Descriptor instead.
func (*MsgQueryBooking) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{18}
}

func (x *MsgQueryBooking) GetPaginate() *sdk.Pagination {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *MsgQueryBooking) GetTimeQuery() *sdk.TimeQuery {
	if x != nil {
		return x.TimeQuery
	}
	return nil
}

func (x *MsgQueryBooking) GetQueryFields() *MsgBooking {
	if x != nil {
		return x.QueryFields
	}
	return nil
}

func (x *MsgQueryBooking) GetOrderFields() *OrderBooking {
	if x != nil {
		return x.OrderFields
	}
	return nil
}

type OrderBooking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *sdk.Sort `protobuf:"varint,1,opt,name=createdAt,proto3,enum=sdk.Sort,oneof" json:"createdAt,omitempty"`
}

func (x *OrderBooking) Reset() {
	*x = OrderBooking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBooking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBooking) ProtoMessage() {}

func (x *OrderBooking) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBooking.ProtoReflect.Descriptor instead.
func (*OrderBooking) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{19}
}

func (x *OrderBooking) GetCreatedAt() sdk.Sort {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return sdk.Sort(0)
}

// Favorite
type MsgFavorite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId     string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	PropertyId string `protobuf:"bytes,3,opt,name=propertyId,proto3" json:"propertyId,omitempty"`
}

func (x *MsgFavorite) Reset() {
	*x = MsgFavorite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgFavorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgFavorite) ProtoMessage() {}

func (x *MsgFavorite) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgFavorite.ProtoReflect.Descriptor instead.
func (*MsgFavorite) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{20}
}

func (x *MsgFavorite) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgFavorite) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MsgFavorite) GetPropertyId() string {
	if x != nil {
		return x.PropertyId
	}
	return ""
}

type MsgQueryFavorite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paginate    *sdk.Pagination `protobuf:"bytes,1,opt,name=paginate,proto3" json:"paginate,omitempty"`
	TimeQuery   *sdk.TimeQuery  `protobuf:"bytes,2,opt,name=timeQuery,proto3,oneof" json:"timeQuery,omitempty"`
	QueryFields *MsgFavorite    `protobuf:"bytes,3,opt,name=queryFields,proto3,oneof" json:"queryFields,omitempty"`
	OrderFields *OrderFavorite  `protobuf:"bytes,4,opt,name=orderFields,proto3,oneof" json:"orderFields,omitempty"`
}

func (x *MsgQueryFavorite) Reset() {
	*x = MsgQueryFavorite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MsgQueryFavorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgQueryFavorite) ProtoMessage() {}

func (x *MsgQueryFavorite) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgQueryFavorite.ProtoReflect.Descriptor instead.
func (*MsgQueryFavorite) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{21}
}

func (x *MsgQueryFavorite) GetPaginate() *sdk.Pagination {
	if x != nil {
		return x.Paginate
	}
	return nil
}

func (x *MsgQueryFavorite) GetTimeQuery() *sdk.TimeQuery {
	if x != nil {
		return x.TimeQuery
	}
	return nil
}

func (x *MsgQueryFavorite) GetQueryFields() *MsgFavorite {
	if x != nil {
		return x.QueryFields
	}
	return nil
}

func (x *MsgQueryFavorite) GetOrderFields() *OrderFavorite {
	if x != nil {
		return x.OrderFields
	}
	return nil
}

type OrderFavorite struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt *sdk.Sort `protobuf:"varint,1,opt,name=createdAt,proto3,enum=sdk.Sort,oneof" json:"createdAt,omitempty"`
}

func (x *OrderFavorite) Reset() {
	*x = OrderFavorite{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_property_property_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFavorite) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFavorite) ProtoMessage() {}

func (x *OrderFavorite) ProtoReflect() protoreflect.Message {
	mi := &file_proto_property_property_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFavorite.ProtoReflect.Descriptor instead.
func (*OrderFavorite) Descriptor() ([]byte, []int) {
	return file_proto_property_property_proto_rawDescGZIP(), []int{22}
}

func (x *OrderFavorite) GetCreatedAt() sdk.Sort {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return sdk.Sort(0)
}

var File_proto_property_property_proto protoreflect.FileDescriptor

var file_proto_property_property_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x1a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x64, 0x6b, 0x2f, 0x73, 0x64, 0x6b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x17, 0x0a, 0x05, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f,
	0x0a, 0x0d, 0x4d, 0x73, 0x67, 0x47, 0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22,
	0xc0, 0x08, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12,
	0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02, 0x69,
	0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6f,
	0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d,
	0x61, 0x78, 0x47, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x50,
	0x65, 0x74, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x65,
	0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x42, 0x65, 0x64, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x42, 0x65, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x75, 0x6d, 0x42, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x42, 0x65, 0x64, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x42, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x42, 0x61, 0x74, 0x68, 0x72, 0x6f, 0x6f,
	0x6d, 0x73, 0x12, 0x27, 0x0a, 0x0c, 0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x01, 0x52, 0x0c, 0x69, 0x73, 0x47, 0x75,
	0x65, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a, 0x0a, 0x69,
	0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x48,
	0x02, 0x52, 0x0a, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x29, 0x0a, 0x0d, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x48, 0x03, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x65, 0x6c,
	0x66, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a, 0x0d, 0x69,
	0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x48, 0x04, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42,
	0x6f, 0x6f, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x1d, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x05, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x06, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x23, 0x0a, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x07, 0x52, 0x0a, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x88, 0x01, 0x01, 0x12, 0x15, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x08, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04,
	0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x09, 0x52, 0x04, 0x6c, 0x6f,
	0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x69, 0x67, 0x68, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6e, 0x69, 0x67, 0x68, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x46, 0x65, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x46, 0x65, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x61, 0x78, 0x50, 0x65, 0x72, 0x63,
	0x65, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x48, 0x0a, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x6d, 0x65, 0x6e, 0x69,
	0x74, 0x79, 0x52, 0x09, 0x61, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0b, 0x52, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x88,
	0x01, 0x01, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x0f, 0x0a, 0x0d, 0x5f,
	0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x50, 0x65, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f,
	0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x42, 0x10, 0x0a,
	0x0e, 0x5f, 0x69, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x63, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x5f, 0x6c, 0x61, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x6c, 0x6f, 0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x43, 0x6f, 0x76,
	0x65, 0x72, 0x22, 0x33, 0x0a, 0x11, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xac, 0x02, 0x0a, 0x10, 0x4d, 0x73,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x2b,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00,
	0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x43,
	0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x48, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73,
	0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x48, 0x02, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x65, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x4b, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x12, 0x2c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c,
	0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xc7, 0x01, 0x0a,
	0x0f, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0x7b, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x2d, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x0e, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x43, 0x0a, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x48, 0x02, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x7f, 0x0a,
	0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x23, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x48,
	0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x13, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x02, 0x69, 0x64, 0x88, 0x01, 0x01, 0x42,
	0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x42, 0x07,
	0x0a, 0x05, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x49,
	0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x66, 0x0a, 0x0a, 0x4d, 0x73, 0x67,
	0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0xa9, 0x02, 0x0a, 0x0f, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6d,
	0x65, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x42, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67,
	0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x48, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x48, 0x02, 0x52,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x4a, 0x0a,
	0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x2c, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd0, 0x03, 0x0a, 0x0a, 0x4d, 0x73,
	0x67, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f,
	0x75, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x75, 0x65, 0x73, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x75, 0x65,
	0x73, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61,
	0x62, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x61, 0x62, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x65,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x65, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x69, 0x67, 0x68,
	0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x69, 0x67, 0x68, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x61,
	0x78, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x54, 0x61, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x61, 0x78, 0x46, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x74, 0x61,
	0x78, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa9, 0x02, 0x0a,
	0x0f, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67,
	0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x42, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x48, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65,
	0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x48, 0x02, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x4a, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x55, 0x0a, 0x0b, 0x4d, 0x73, 0x67, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x49, 0x64, 0x22, 0xac, 0x02, 0x0a, 0x10,
	0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
	0x12, 0x2b, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x31, 0x0a,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x43, 0x0a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x48, 0x01, 0x52, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x73, 0x88, 0x01, 0x01, 0x12, 0x45, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x48, 0x02, 0x52, 0x0b, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x0d, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x48, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xce, 0x0a, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x11, 0x2e, 0x73, 0x64,
	0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44,
	0x0a, 0x12, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x6f,
	0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6f, 0x6b, 0x69,
	0x6e, 0x67, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42,
	0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x42, 0x6f, 0x6f, 0x6b,
	0x69, 0x6e, 0x67, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x13, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x1a,
	0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e,
	0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d,
	0x73, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a, 0x11,
	0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x1a,
	0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x65, 0x6e,
	0x69, 0x74, 0x79, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x79,
	0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x65,
	0x6e, 0x69, 0x74, 0x79, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74,
	0x79, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6d,
	0x65, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x64, 0x1a, 0x11, 0x2e,
	0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6d, 0x65, 0x6e, 0x69, 0x74, 0x79,
	0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x46, 0x61, 0x76, 0x6f, 0x72,
	0x69, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x49, 0x64,
	0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69,
	0x74, 0x65, 0x12, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x4d, 0x73, 0x67, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x61, 0x76,
	0x6f, 0x72, 0x69, 0x74, 0x65, 0x1a, 0x11, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x21, 0x5a, 0x1f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_property_property_proto_rawDescOnce sync.Once
	file_proto_property_property_proto_rawDescData = file_proto_property_property_proto_rawDesc
)

func file_proto_property_property_proto_rawDescGZIP() []byte {
	file_proto_property_property_proto_rawDescOnce.Do(func() {
		file_proto_property_property_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_property_property_proto_rawDescData)
	})
	return file_proto_property_property_proto_rawDescData
}

var file_proto_property_property_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_proto_property_property_proto_goTypes = []interface{}{
	(*MsgId)(nil),             // 0: propertyService.MsgId
	(*MsgGetBooking)(nil),     // 1: propertyService.MsgGetBooking
	(*MsgProperty)(nil),       // 2: propertyService.MsgProperty
	(*MsgDeleteProperty)(nil), // 3: propertyService.MsgDeleteProperty
	(*MsgGetProperty)(nil),    // 4: propertyService.MsgGetProperty
	(*MsgQueryProperty)(nil),  // 5: propertyService.MsgQueryProperty
	(*QueryProperty)(nil),     // 6: propertyService.QueryProperty
	(*OrderProperty)(nil),     // 7: propertyService.OrderProperty
	(*MsgCreateReview)(nil),   // 8: propertyService.MsgCreateReview
	(*MsgUpdateReview)(nil),   // 9: propertyService.MsgUpdateReview
	(*MsgDeleteReview)(nil),   // 10: propertyService.MsgDeleteReview
	(*MsgQueryReview)(nil),    // 11: propertyService.MsgQueryReview
	(*QueryReview)(nil),       // 12: propertyService.QueryReview
	(*OrderReview)(nil),       // 13: propertyService.OrderReview
	(*MsgAmenity)(nil),        // 14: propertyService.MsgAmenity
	(*MsgQueryAmenity)(nil),   // 15: propertyService.MsgQueryAmenity
	(*OrderAmenity)(nil),      // 16: propertyService.OrderAmenity
	(*MsgBooking)(nil),        // 17: propertyService.MsgBooking
	(*MsgQueryBooking)(nil),   // 18: propertyService.MsgQueryBooking
	(*OrderBooking)(nil),      // 19: propertyService.OrderBooking
	(*MsgFavorite)(nil),       // 20: propertyService.MsgFavorite
	(*MsgQueryFavorite)(nil),  // 21: propertyService.MsgQueryFavorite
	(*OrderFavorite)(nil),     // 22: propertyService.OrderFavorite
	(*sdk.Pagination)(nil),    // 23: sdk.Pagination
	(*sdk.TimeQuery)(nil),     // 24: sdk.TimeQuery
	(sdk.Sort)(0),             // 25: sdk.Sort
	(*sdk.BaseResponse)(nil),  // 26: sdk.BaseResponse
}
var file_proto_property_property_proto_depIdxs = []int32{
	14, // 0: propertyService.MsgProperty.amenities:type_name -> propertyService.MsgAmenity
	23, // 1: propertyService.MsgQueryProperty.paginate:type_name -> sdk.Pagination
	24, // 2: propertyService.MsgQueryProperty.timeQuery:type_name -> sdk.TimeQuery
	2,  // 3: propertyService.MsgQueryProperty.queryFields:type_name -> propertyService.MsgProperty
	7,  // 4: propertyService.MsgQueryProperty.orderFields:type_name -> propertyService.OrderProperty
	25, // 5: propertyService.OrderProperty.createdAt:type_name -> sdk.Sort
	23, // 6: propertyService.MsgQueryReview.paginate:type_name -> sdk.Pagination
	24, // 7: propertyService.MsgQueryReview.timeQuery:type_name -> sdk.TimeQuery
	12, // 8: propertyService.MsgQueryReview.queryFields:type_name -> propertyService.QueryReview
	13, // 9: propertyService.MsgQueryReview.orderFields:type_name -> propertyService.OrderReview
	25, // 10: propertyService.OrderReview.createdAt:type_name -> sdk.Sort
	23, // 11: propertyService.MsgQueryAmenity.paginate:type_name -> sdk.Pagination
	24, // 12: propertyService.MsgQueryAmenity.timeQuery:type_name -> sdk.TimeQuery
	14, // 13: propertyService.MsgQueryAmenity.queryFields:type_name -> propertyService.MsgAmenity
	16, // 14: propertyService.MsgQueryAmenity.orderFields:type_name -> propertyService.OrderAmenity
	25, // 15: propertyService.OrderAmenity.createdAt:type_name -> sdk.Sort
	23, // 16: propertyService.MsgQueryBooking.paginate:type_name -> sdk.Pagination
	24, // 17: propertyService.MsgQueryBooking.timeQuery:type_name -> sdk.TimeQuery
	17, // 18: propertyService.MsgQueryBooking.queryFields:type_name -> propertyService.MsgBooking
	19, // 19: propertyService.MsgQueryBooking.orderFields:type_name -> propertyService.OrderBooking
	25, // 20: propertyService.OrderBooking.createdAt:type_name -> sdk.Sort
	23, // 21: propertyService.MsgQueryFavorite.paginate:type_name -> sdk.Pagination
	24, // 22: propertyService.MsgQueryFavorite.timeQuery:type_name -> sdk.TimeQuery
	20, // 23: propertyService.MsgQueryFavorite.queryFields:type_name -> propertyService.MsgFavorite
	22, // 24: propertyService.MsgQueryFavorite.orderFields:type_name -> propertyService.OrderFavorite
	25, // 25: propertyService.OrderFavorite.createdAt:type_name -> sdk.Sort
	18, // 26: propertyService.propertyService.GetBooking:input_type -> propertyService.MsgQueryBooking
	17, // 27: propertyService.propertyService.CountBookingStatus:input_type -> propertyService.MsgBooking
	17, // 28: propertyService.propertyService.CreateBooking:input_type -> propertyService.MsgBooking
	17, // 29: propertyService.propertyService.CancelBooking:input_type -> propertyService.MsgBooking
	5,  // 30: propertyService.propertyService.GetProperty:input_type -> propertyService.MsgQueryProperty
	2,  // 31: propertyService.propertyService.CountPropertyStatus:input_type -> propertyService.MsgProperty
	2,  // 32: propertyService.propertyService.CreateProperty:input_type -> propertyService.MsgProperty
	2,  // 33: propertyService.propertyService.UpdateProperty:input_type -> propertyService.MsgProperty
	3,  // 34: propertyService.propertyService.DeleteProperty:input_type -> propertyService.MsgDeleteProperty
	8,  // 35: propertyService.propertyService.CreateReview:input_type -> propertyService.MsgCreateReview
	9,  // 36: propertyService.propertyService.UpdateReview:input_type -> propertyService.MsgUpdateReview
	10, // 37: propertyService.propertyService.DeleteReview:input_type -> propertyService.MsgDeleteReview
	11, // 38: propertyService.propertyService.GetReview:input_type -> propertyService.MsgQueryReview
	14, // 39: propertyService.propertyService.CreateAmenity:input_type -> propertyService.MsgAmenity
	14, // 40: propertyService.propertyService.UpdateAmenity:input_type -> propertyService.MsgAmenity
	0,  // 41: propertyService.propertyService.DeleteAmenity:input_type -> propertyService.MsgId
	15, // 42: propertyService.propertyService.GetAmenity:input_type -> propertyService.MsgQueryAmenity
	20, // 43: propertyService.propertyService.CreateFavorite:input_type -> propertyService.MsgFavorite
	0,  // 44: propertyService.propertyService.DeleteFavorite:input_type -> propertyService.MsgId
	21, // 45: propertyService.propertyService.GetFavorite:input_type -> propertyService.MsgQueryFavorite
	26, // 46: propertyService.propertyService.GetBooking:output_type -> sdk.BaseResponse
	26, // 47: propertyService.propertyService.CountBookingStatus:output_type -> sdk.BaseResponse
	26, // 48: propertyService.propertyService.CreateBooking:output_type -> sdk.BaseResponse
	26, // 49: propertyService.propertyService.CancelBooking:output_type -> sdk.BaseResponse
	26, // 50: propertyService.propertyService.GetProperty:output_type -> sdk.BaseResponse
	26, // 51: propertyService.propertyService.CountPropertyStatus:output_type -> sdk.BaseResponse
	26, // 52: propertyService.propertyService.CreateProperty:output_type -> sdk.BaseResponse
	26, // 53: propertyService.propertyService.UpdateProperty:output_type -> sdk.BaseResponse
	26, // 54: propertyService.propertyService.DeleteProperty:output_type -> sdk.BaseResponse
	26, // 55: propertyService.propertyService.CreateReview:output_type -> sdk.BaseResponse
	26, // 56: propertyService.propertyService.UpdateReview:output_type -> sdk.BaseResponse
	26, // 57: propertyService.propertyService.DeleteReview:output_type -> sdk.BaseResponse
	26, // 58: propertyService.propertyService.GetReview:output_type -> sdk.BaseResponse
	26, // 59: propertyService.propertyService.CreateAmenity:output_type -> sdk.BaseResponse
	26, // 60: propertyService.propertyService.UpdateAmenity:output_type -> sdk.BaseResponse
	26, // 61: propertyService.propertyService.DeleteAmenity:output_type -> sdk.BaseResponse
	26, // 62: propertyService.propertyService.GetAmenity:output_type -> sdk.BaseResponse
	26, // 63: propertyService.propertyService.CreateFavorite:output_type -> sdk.BaseResponse
	26, // 64: propertyService.propertyService.DeleteFavorite:output_type -> sdk.BaseResponse
	26, // 65: propertyService.propertyService.GetFavorite:output_type -> sdk.BaseResponse
	46, // [46:66] is the sub-list for method output_type
	26, // [26:46] is the sub-list for method input_type
	26, // [26:26] is the sub-list for extension type_name
	26, // [26:26] is the sub-list for extension extendee
	0,  // [0:26] is the sub-list for field type_name
}

func init() { file_proto_property_property_proto_init() }
func file_proto_property_property_proto_init() {
	if File_proto_property_property_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_property_property_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetBooking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgGetProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgCreateReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgUpdateReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgDeleteReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderReview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgAmenity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryAmenity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAmenity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgBooking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryBooking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBooking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgFavorite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MsgQueryFavorite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_property_property_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFavorite); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_property_property_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[18].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[19].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[21].OneofWrappers = []interface{}{}
	file_proto_property_property_proto_msgTypes[22].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_property_property_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_property_property_proto_goTypes,
		DependencyIndexes: file_proto_property_property_proto_depIdxs,
		MessageInfos:      file_proto_property_property_proto_msgTypes,
	}.Build()
	File_proto_property_property_proto = out.File
	file_proto_property_property_proto_rawDesc = nil
	file_proto_property_property_proto_goTypes = nil
	file_proto_property_property_proto_depIdxs = nil
}
