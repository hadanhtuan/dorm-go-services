// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v4.25.3
// source: proto/booking/booking.proto

package booking

import (
	sdk "booking-service/proto/sdk"
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// BookingServiceClient is the client API for BookingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BookingServiceClient interface {
	GetBookingDetail(ctx context.Context, in *MsgGetBookingRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error)
	// Property
	GetPropertyDetail(ctx context.Context, in *MsgGetPropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error)
	GetAllProperty(ctx context.Context, in *MessageQueryRoom, opts ...grpc.CallOption) (*sdk.BaseResponse, error)
	CreateProperty(ctx context.Context, in *MsgCreatePropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error)
	UpdateProperty(ctx context.Context, in *MsgUpdatePropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error)
	DeleteProperty(ctx context.Context, in *MsgDeletePropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error)
}

type bookingServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBookingServiceClient(cc grpc.ClientConnInterface) BookingServiceClient {
	return &bookingServiceClient{cc}
}

func (c *bookingServiceClient) GetBookingDetail(ctx context.Context, in *MsgGetBookingRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error) {
	out := new(sdk.BaseResponse)
	err := c.cc.Invoke(ctx, "/bookingService.bookingService/GetBookingDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) GetPropertyDetail(ctx context.Context, in *MsgGetPropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error) {
	out := new(sdk.BaseResponse)
	err := c.cc.Invoke(ctx, "/bookingService.bookingService/GetPropertyDetail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) GetAllProperty(ctx context.Context, in *MessageQueryRoom, opts ...grpc.CallOption) (*sdk.BaseResponse, error) {
	out := new(sdk.BaseResponse)
	err := c.cc.Invoke(ctx, "/bookingService.bookingService/GetAllProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) CreateProperty(ctx context.Context, in *MsgCreatePropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error) {
	out := new(sdk.BaseResponse)
	err := c.cc.Invoke(ctx, "/bookingService.bookingService/CreateProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) UpdateProperty(ctx context.Context, in *MsgUpdatePropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error) {
	out := new(sdk.BaseResponse)
	err := c.cc.Invoke(ctx, "/bookingService.bookingService/UpdateProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bookingServiceClient) DeleteProperty(ctx context.Context, in *MsgDeletePropertyRequest, opts ...grpc.CallOption) (*sdk.BaseResponse, error) {
	out := new(sdk.BaseResponse)
	err := c.cc.Invoke(ctx, "/bookingService.bookingService/DeleteProperty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BookingServiceServer is the server API for BookingService service.
// All implementations must embed UnimplementedBookingServiceServer
// for forward compatibility
type BookingServiceServer interface {
	GetBookingDetail(context.Context, *MsgGetBookingRequest) (*sdk.BaseResponse, error)
	// Property
	GetPropertyDetail(context.Context, *MsgGetPropertyRequest) (*sdk.BaseResponse, error)
	GetAllProperty(context.Context, *MessageQueryRoom) (*sdk.BaseResponse, error)
	CreateProperty(context.Context, *MsgCreatePropertyRequest) (*sdk.BaseResponse, error)
	UpdateProperty(context.Context, *MsgUpdatePropertyRequest) (*sdk.BaseResponse, error)
	DeleteProperty(context.Context, *MsgDeletePropertyRequest) (*sdk.BaseResponse, error)
	mustEmbedUnimplementedBookingServiceServer()
}

// UnimplementedBookingServiceServer must be embedded to have forward compatible implementations.
type UnimplementedBookingServiceServer struct {
}

func (UnimplementedBookingServiceServer) GetBookingDetail(context.Context, *MsgGetBookingRequest) (*sdk.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBookingDetail not implemented")
}
func (UnimplementedBookingServiceServer) GetPropertyDetail(context.Context, *MsgGetPropertyRequest) (*sdk.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPropertyDetail not implemented")
}
func (UnimplementedBookingServiceServer) GetAllProperty(context.Context, *MessageQueryRoom) (*sdk.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllProperty not implemented")
}
func (UnimplementedBookingServiceServer) CreateProperty(context.Context, *MsgCreatePropertyRequest) (*sdk.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateProperty not implemented")
}
func (UnimplementedBookingServiceServer) UpdateProperty(context.Context, *MsgUpdatePropertyRequest) (*sdk.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProperty not implemented")
}
func (UnimplementedBookingServiceServer) DeleteProperty(context.Context, *MsgDeletePropertyRequest) (*sdk.BaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProperty not implemented")
}
func (UnimplementedBookingServiceServer) mustEmbedUnimplementedBookingServiceServer() {}

// UnsafeBookingServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BookingServiceServer will
// result in compilation errors.
type UnsafeBookingServiceServer interface {
	mustEmbedUnimplementedBookingServiceServer()
}

func RegisterBookingServiceServer(s grpc.ServiceRegistrar, srv BookingServiceServer) {
	s.RegisterService(&BookingService_ServiceDesc, srv)
}

func _BookingService_GetBookingDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGetBookingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).GetBookingDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookingService.bookingService/GetBookingDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).GetBookingDetail(ctx, req.(*MsgGetBookingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_GetPropertyDetail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgGetPropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).GetPropertyDetail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookingService.bookingService/GetPropertyDetail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).GetPropertyDetail(ctx, req.(*MsgGetPropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_GetAllProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageQueryRoom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).GetAllProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookingService.bookingService/GetAllProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).GetAllProperty(ctx, req.(*MessageQueryRoom))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_CreateProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).CreateProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookingService.bookingService/CreateProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).CreateProperty(ctx, req.(*MsgCreatePropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_UpdateProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).UpdateProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookingService.bookingService/UpdateProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).UpdateProperty(ctx, req.(*MsgUpdatePropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BookingService_DeleteProperty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePropertyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BookingServiceServer).DeleteProperty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/bookingService.bookingService/DeleteProperty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BookingServiceServer).DeleteProperty(ctx, req.(*MsgDeletePropertyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BookingService_ServiceDesc is the grpc.ServiceDesc for BookingService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BookingService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "bookingService.bookingService",
	HandlerType: (*BookingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetBookingDetail",
			Handler:    _BookingService_GetBookingDetail_Handler,
		},
		{
			MethodName: "GetPropertyDetail",
			Handler:    _BookingService_GetPropertyDetail_Handler,
		},
		{
			MethodName: "GetAllProperty",
			Handler:    _BookingService_GetAllProperty_Handler,
		},
		{
			MethodName: "CreateProperty",
			Handler:    _BookingService_CreateProperty_Handler,
		},
		{
			MethodName: "UpdateProperty",
			Handler:    _BookingService_UpdateProperty_Handler,
		},
		{
			MethodName: "DeleteProperty",
			Handler:    _BookingService_DeleteProperty_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/booking/booking.proto",
}
